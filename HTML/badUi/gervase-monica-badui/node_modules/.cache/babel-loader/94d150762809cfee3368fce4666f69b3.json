{"ast":null,"code":"var _jsxFileName = \"/home/modeffz/code/html/badUi/gervase-monica-badui/src/Components/LastNameInput/CharacterSlot.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { CharacterContainer } from \"./LastNameInput.css\";\nimport { alphabetArray } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CharacterSlot = _ref => {\n  _s();\n\n  let {\n    selected,\n    updateLastName,\n    index\n  } = _ref;\n  const [character, setCharacter] = useState(alphabetArray[0]);\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    setTimeout(() => {\n      if (!selected) {\n        setCounter(counter + 1);\n        setCharacter(alphabetArray[counter % alphabetArray.length]);\n      }\n\n      if (selected) {\n        updateLastName(index, character);\n      }\n    }, 100);\n  }, [counter, selected]); // Do we hoist this to create an actual name or leave as is?\n\n  return /*#__PURE__*/_jsxDEV(CharacterContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: character\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterSlot, \"vMRi1FPA0PSx4FXQTwN33B1FeAs=\");\n\n_c = CharacterSlot;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterSlot\");","map":{"version":3,"names":["React","useEffect","useState","CharacterContainer","alphabetArray","CharacterSlot","selected","updateLastName","index","character","setCharacter","counter","setCounter","setTimeout","length"],"sources":["/home/modeffz/code/html/badUi/gervase-monica-badui/src/Components/LastNameInput/CharacterSlot.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { CharacterContainer } from \"./LastNameInput.css\";\nimport { alphabetArray } from \"./utils\";\ninterface Props {\n  selected: boolean;\n  updateLastName: (index: number, character: string) => void;\n  index: number;\n}\n\nexport const CharacterSlot = ({ selected, updateLastName, index }: Props) => {\n  const [character, setCharacter] = useState(alphabetArray[0]);\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    setTimeout(() => {\n      if (!selected) {\n        setCounter(counter + 1);\n        setCharacter(alphabetArray[counter % alphabetArray.length]);\n      }\n      if (selected) {\n        updateLastName(index, character);\n      }\n    }, 100);\n  }, [counter, selected]);\n  // Do we hoist this to create an actual name or leave as is?\n  return (\n    <CharacterContainer>\n      <div>{character}</div>\n    </CharacterContainer>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AACA,SAASC,aAAT,QAA8B,SAA9B;;AAOA,OAAO,MAAMC,aAAa,GAAG,QAAgD;EAAA;;EAAA,IAA/C;IAAEC,QAAF;IAAYC,cAAZ;IAA4BC;EAA5B,CAA+C;EAC3E,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAACE,aAAa,CAAC,CAAD,CAAd,CAA1C;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAD,CAAtC;EACAD,SAAS,CAAC,MAAM;IACdY,UAAU,CAAC,MAAM;MACf,IAAI,CAACP,QAAL,EAAe;QACbM,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;QACAD,YAAY,CAACN,aAAa,CAACO,OAAO,GAAGP,aAAa,CAACU,MAAzB,CAAd,CAAZ;MACD;;MACD,IAAIR,QAAJ,EAAc;QACZC,cAAc,CAACC,KAAD,EAAQC,SAAR,CAAd;MACD;IACF,CARS,EAQP,GARO,CAAV;EASD,CAVQ,EAUN,CAACE,OAAD,EAAUL,QAAV,CAVM,CAAT,CAH2E,CAc3E;;EACA,oBACE,QAAC,kBAAD;IAAA,uBACE;MAAA,UAAMG;IAAN;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CApBM;;GAAMJ,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}