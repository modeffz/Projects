{"ast":null,"code":"var _jsxFileName = \"/home/modeffz/code/html/badUi/gervase-monica-badui/src/Components/LastNameInput/CharacterSlotMachine.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { CharacterSlot } from \"./CharacterSlot\";\nimport { SlotMachineContainer } from \"./LastNameInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CharacterSlotMachine = _ref => {\n  _s();\n\n  let {\n    updateLastName,\n    index\n  } = _ref;\n  const [selected, setSelected] = useState(false);\n\n  const handleClick = () => {\n    setSelected(!selected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SlotMachineContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CharacterSlot, {\n      selected: selected,\n      updateLastName: updateLastName,\n      index: index\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleClick,\n      children: selected ? \"Reselect\" : \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterSlotMachine, \"jTu/AeLw5BOy6ZW1dDNXzAJjzwE=\");\n\n_c = CharacterSlotMachine;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterSlotMachine\");","map":{"version":3,"names":["useState","CharacterSlot","SlotMachineContainer","CharacterSlotMachine","updateLastName","index","selected","setSelected","handleClick"],"sources":["/home/modeffz/code/html/badUi/gervase-monica-badui/src/Components/LastNameInput/CharacterSlotMachine.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { CharacterSlot } from \"./CharacterSlot\";\nimport { SlotMachineContainer } from \"./LastNameInput.css\";\n\ninterface Props {\n  updateLastName: (index: number, character: string) => void;\n  index: number;\n}\n\nexport const CharacterSlotMachine = ({ updateLastName, index }: Props) => {\n  const [selected, setSelected] = useState(false);\n\n  const handleClick = () => {\n    setSelected(!selected);\n  };\n  return (\n    <SlotMachineContainer>\n      <CharacterSlot\n        selected={selected}\n        updateLastName={updateLastName}\n        index={index}\n      />\n      <button type=\"button\" onClick={handleClick}>\n        {selected ? \"Reselect\" : \"Confirm\"}\n      </button>\n    </SlotMachineContainer>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,oBAAT,QAAqC,qBAArC;;AAOA,OAAO,MAAMC,oBAAoB,GAAG,QAAsC;EAAA;;EAAA,IAArC;IAAEC,cAAF;IAAkBC;EAAlB,CAAqC;EACxE,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;;EAEA,MAAMQ,WAAW,GAAG,MAAM;IACxBD,WAAW,CAAC,CAACD,QAAF,CAAX;EACD,CAFD;;EAGA,oBACE,QAAC,oBAAD;IAAA,wBACE,QAAC,aAAD;MACE,QAAQ,EAAEA,QADZ;MAEE,cAAc,EAAEF,cAFlB;MAGE,KAAK,EAAEC;IAHT;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAEG,WAA/B;MAAA,UACGF,QAAQ,GAAG,UAAH,GAAgB;IAD3B;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAlBM;;GAAMH,oB;;KAAAA,oB"},"metadata":{},"sourceType":"module"}